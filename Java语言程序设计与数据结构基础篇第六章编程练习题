6.1
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		for(int i = 1;i <= 100;i++) {
			if(i % 10 == 0) {
				System.out.printf("%7d\n",getPentagonalNumber(i));
			}
			else {
				System.out.printf("%7d",getPentagonalNumber(i));
			}
		}
		
	}

	public static int getPentagonalNumber(int n) {
		n = n * ( 3 * n - 1) / 2;
		return n;
		
		}
	}

6.2
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		Scanner input = new Scanner(System.in);
		System.out.print("Enter a number:");
		int i = input.nextInt();
		System.out.print(sumDigits(i));
	}

	public static int sumDigits(long n) {
		int sum = 0;
		do {
			sum = sum + (int)n % 10;
			n = n/10;
		}while(n != 0);
		return sum;	
		
		}
	}
    
6.3
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		Scanner input = new Scanner(System.in);
		System.out.print("Enter a number:");
		int i = input.nextInt();
		
		if(isPalindrome(i)) {
			System.out.print("isPalindrome");
		}
		else {
			System.out.print(" not isPalindrome");
		}
	}

	public static boolean isPalindrome(int number) {
		if(number == reverse(number)) 
			return true;
		else
			return false;
	}

	public static int reverse(int number) {
		int num = 0;
		while(number != 0) {
			num = num * 10 + number % 10;
			number = number /10;
		}
		
		return num;
	}
}

6.4
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		Scanner input = new Scanner(System.in);
		System.out.print("Enter a number:");
		int i = input.nextInt();
		
		System.out.print(reverse(i));
	}


	public static int reverse(int number) {
		int num = 0;
		while(number != 0) {
			num = num * 10 + number % 10;
			number = number /10;
		}
		
		return num;
	}
}

6.5
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		Scanner input = new Scanner(System.in);
		System.out.print("Enter three number:");
		double num1 = input.nextDouble();
		double num2 = input.nextDouble();
		double num3 = input.nextDouble();
		
		displaySortedNumbers(num1,num2,num3);
		
	}


	public static void displaySortedNumbers(double num1, double num2, double num3){
		double temp = 0;
		if(num1 > num2) {
			temp = num1;
			num1 = num2;
			num2 = temp;
		}
		if(num2 > num3) {
			temp = num2;
			num2 = num3;
			num3 = temp;
		}
		if(num1 > num2) {
			temp = num1;
			num1 = num2;
			num2 = temp;
		}
		System.out.println("The sorted numbers are " + num1 + " " + num2 + " " + num3);
	}
}

6.6
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		Scanner input = new Scanner(System.in);
		System.out.print("Enter a number:");
		int num = input.nextInt();
		displayPattern(num);
	}

	public static void displayPattern(int n){
		for(int i = 1;i <= n;i++) {
			for(int k = 1;k <= n-i;k++) {
				System.out.print("    ");
			}
			for(int j = i;j > 0;j--) {
				System.out.printf("%4d",j);
			}
			System.out.println();
		}
	}
}

6.7 套公式循环输出
6.8 同上
6.9 同上
6.10
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		int count = 0;
		for(int i = 2;i <= 10000;i++) {
			if(isPrime(i)) {
				count++;
			}
		}
		System.out.print("素数数量：" + count);
	}
	
	public static boolean isPrime(int number) {
		for (int divisor = 2; divisor <= number / 2; divisor++) {
			if (number % divisor == 0) { // If true, number is not prime
				return false; // number is not a prime
			}
		}
		return true; // number is prime
	}
}

6.11 套用5.39

6.12
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		printChars('1','z',10);
	}
	
	public static void printChars(char ch1, char ch2, int numberPerLine){
		int count = 1;
		for(char i = ch1;i <= ch2;i++) {
			if(count % numberPerLine == 0) {
				System.out.printf("%-2c\n",i);
			}
			else {
				System.out.printf("%-2c",i);
			}
			count++;
		}
	}
}

6.13
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		printmi(20);
	}
	
	public static void printmi(double i){
		System.out.println("i     m(i)     ");
		System.out.println("----------------");
		for(int a = 1;a <= i;a++) {
			double m = 0;
			System.out.printf("%-6d",a);
			for(double b = 1;b <= a;b++) {
				 m += b / (b + 1);
			}
			System.out.printf("%-10.4f\n",m);
		}
	}
}

6.14 套公式同上
6.15 见清单3-5
6.16 略
6.17 略
6.18
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		Scanner input = new Scanner(System.in);
		System.out.print("Enter the password:");
		String s = input.nextLine();
		if(password(s)) {
			System.out.print("Valid Password");
		}
		else {
			System.out.print("Invalid Password");
		}
	}
	
	public static boolean password(String s){
		if(s.length() < 8) 
			return false;
		
	    for (int i = 0; i < s.length(); i++) {
	        if (!Character.isLetter(s.charAt(i)) && 
	            !Character.isDigit(s.charAt(i)))
	          return false;
	    }
	    
	    int count = 0;
	    for (int i = 0; i < s.length(); i++) {
	      if (Character.isDigit(s.charAt(i)))
	        count++;
	    }
	    
	    if (count >= 2)
	        return true;
	      else 
	        return false;
	}
}

6.19 套公式 加入三角形判断条件
6.20
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		Scanner input = new Scanner(System.in);
		System.out.print("Enter a String:");
		String s = input.nextLine();
		System.out.print("the number of String is:" + countLetters(s));
	}
	
	public static int countLetters(String s){
		int count = 0;
		for(int i = 1;i < s.length();i++) {
			if(Character.isLetter(s.charAt(i))) {
				count++;
			}
		}
		return count;
	}
}

6.21
import java.util.Scanner;

public class Exercises{
	public static void main(String[] argds) {
		Scanner input = new Scanner(System.in);
		System.out.print("Enter the phone number:");
		String s = input.nextLine();
		
		for(int i = 0;i < s.length();i++) {
			if(Character.isLetter(s.charAt(i))) {
				System.out.print(getNumber(Character.toUpperCase(s.charAt(i))));
			}
			else {
				System.out.print(s.charAt(i));
			}
		}
	}
	
	public static int getNumber(char uppercaseLetter){
		int number = 0;
	    switch (uppercaseLetter) {
	      case 'A':
	      case 'B':
	      case 'C': number = 2; break;
	      case 'D':
	      case 'E':
	      case 'F': number = 3; break;
	      case 'G':
	      case 'H':
	      case 'I': number = 4; break;
	      case 'J':
	      case 'K':
	      case 'L': number = 5; break;
	      case 'M':
	      case 'N':
	      case 'O': number = 6; break;
	      case 'P':
	      case 'Q':
	      case 'R':
	      case 'S': number = 7; break;
	      case 'T':
	      case 'U':
	      case 'V': number = 8; break;
	      case 'W':
	      case 'X':
	      case 'Y':
	      case 'Z': number = 9; break;
	    }
	    return number;
	}
}

6.22 看不懂题目 放上标准答案
public class Exercise06_22 {
  // Main method
  public static void main(String[] args) {
    System.out.print("Enter a positive number: ");
    java.util.Scanner input = new java.util.Scanner(System.in);
    double number = input.nextDouble();
    
    System.out.println(
      "The square root for " + number + " is " + SquareRoot.sqrt(number));
  }
}

// This class contains sqrt method
class SquareRoot {
  // Find the square root of the value
  public static double sqrt(double num) {
    double nextGuess = 1.0;
    double lastGuess;

    do {
      lastGuess = nextGuess;
      nextGuess = (lastGuess + (num / lastGuess)) * 0.5;
    } 
    while (Math.abs(nextGuess - lastGuess) >= 0.00001);

    return nextGuess;
  }
}

6.23 

class test {
    public static void main(String[] args) {
    String str = "ambassadorial";
    int a = count(str,'s');
        System.out.println(a);

    }

    public static int count(String str, char a){
        int count = 0;
        for (int i = 0; i < str.length(); i++) {
            if ( a == str.charAt(i)){
                count++;
            }

        }
        return count;
    }

}

6.24 清单2-7
6.25 略
6.26

class test {
    public static void main(String[] args) {
    print(100);

    }

    static void print(int num){
        int count = 0;

            for (int i = 2; true ; i++) {
                if (IsPalindrome(i) && IsPrime(i)){
                    System.out.print(i + " ");
                    count++;
                    if (count % 10 == 0){
                        System.out.println();
                    }
                    if (count == num) break;

                }
            }


    }
    

    //判断是否素数
    public static boolean IsPrime(int a){
        for (int i = 2; i <= a / 2 ; i++) {
            if (a % i == 0){
                return false;
            }
        }
        return true;
    }
    //判断是否回文
    static boolean IsPalindrome(int num){
        return num == reveersal(num);

    }
    //反转数字算法
    static int reveersal(int num){
        int result = 0;
        while (num !=0){
            result=result*10+num%10;
            num=num/10;
        }
        return result;
    }
}

6.27 套用26方法判断即可
class test {
    public static void main(String[] args) {
    print(10);
    }

    static void print(int num){
        int count = 0;

            for (int i = 10; true ; i++) {
                if (IsPalindrome(i) == false && IsPrime(i) && IsPrime(reveersal(i))){
                    System.out.print(i + " ");
                    count++;
                    if (count % 10 == 0){
                        System.out.println();
                    }
                    if (count == num) break;

                }
            }


    }
    

    //判断是否素数
    public static boolean IsPrime(int a){
        for (int i = 2; i < a / 2 ; i++) {
            if (a % i == 0){
                return false;
            }
        }
        return true;
    }
    //判断是否回文
    static boolean IsPalindrome(int num){
        return num == reveersal(num);

    }
    //反转数字
    static int reveersal(int num){
        int result = 0;
        while (num !=0){
            result=result*10+num%10;
            num=num/10;
        }
        return result;
    }
}

6.28

class test {
    public static void main(String[] args) {
        
        System.out.printf("%-5s %-8s%n","p","2^p-1");
        System.out.printf("-------------%n");

        for (int i = 2; i <= 31; i++) {
            int a = (int) Math.pow(2.0, i) - 1;
            if (IsPrime(a)){
                System.out.printf("%-5d %-8d%n",i,a);
            }
        }

    }


    //判断是否素数
    public static boolean IsPrime(int a){
        for (int i = 2; i <= a / 2 ; i++) {
            if (a % i == 0){
                return false;
            }
        }
        return true;
    }

}


6.29
class test {
    public static void main(String[] args) {


        int temp = 2;

        for (int i = 2; i < 100; i++) {

            if (IsPrime(i)){
                if ( i - temp == 2){
                    System.out.println("(" + temp +"," + i +")");
                }
                temp = i;
            }

        }

    }

    //判断是否素数
    public static boolean IsPrime(int a){
        if ((a == 1) || (a == 2)) {
            return true;
        }
        for (int i = 2; i <= a / 2 ; i++) {
            if (a % i == 0){
                return false;
            }
        }
        return true;
    }

}


6.30

class test {
    public static void main(String[] args) {
        int z = crap();
        if (z == 2 || z == 3 || z == 12) {
            System.out.println("You win");
            System.exit(1);
        }else if ( z == 7 || z == 11){
            System.out.println("You lose");
            System.exit(2);
        }

        int p = z;
        System.out.println("point is " + p);
        do {
            z = crap();
        }while (z != 7 && z != p);
        if (z == 7){
            System.out.println("You lose");
        }else
            System.out.println("You win");
    }

    public static int crap(){

        int a = (int)(Math.random()*6) + 1;
        int b = (int)(Math.random()*6) + 1;
        System.out.println("You rolled " + a + " + " + b + " = " + (a + b));
        return a + b;

    }

}

6.31  太难了，看着答案理解了写的
import java.util.Scanner;

class test {
    public static void main(String[] args) {

        Scanner input = new Scanner(System.in);

        System.out.print("Enter a credit card number as a long integer: ");
        long number = input.nextLong();

        if (isValid(number))
            System.out.println(number + " is valid");
        else
            System.out.println(number + " is invalid");

    }

    //检查卡片是否合法
    public static boolean isValid(long num){
        return  (getSize(num) >= 13 && getSize(num) <= 16 && prefixMatched(num , 4) || prefixMatched(num , 5)
        || prefixMatched(num , 37) || prefixMatched(num , 37) && (sumOfDoubleEvenPlace(num) + sumOfOddPlace(num))
            % 10 ==0);
    }

    //第二步求偶数翻倍的和
    public static int sumOfDoubleEvenPlace(long num){
        int result = 0;
        num = num / 10;
        while (num != 0) {
            result += getDigit((int)((num % 10) * 2));
            num = num / 100;
        }

        return result;
    }

    //返回这个数字如果是个位数，否则返回这个数字的和
    public static int getDigit(int num){
        return num % 10 + (num / 10);
    }

    //返回这个数字的奇数位数字的和
    public  static int sumOfOddPlace(long num){
        int sum = 0;
        while (num !=0){
            sum += num % 10;
            num = num / 100;
        }
        return sum;
    }

    //返回num数字d位数的数字是否和d想等
    public static boolean prefixMatched(long num, int d){
        return getPrefix(num , getSize(d)) == d;

    }

    //返回数字的位数
    public static int getSize(long d){
        int size = 0;
        while (d !=0){
            size++;
            d = d/10;
        }
        return size;
    }

    //返回从左开始的K位数的数字（如K=99，则返回2位数,k=100则返回3位数）
    public static long getPrefix(long num,int k){
        long result = num;
        for (int i = 0; i < getSize(num) - k ; i++) {
            result = result / 10;
        }

        return result;
    }


}

6.32 添加计数器计算赢的次数



