7.1
import java.util.Scanner;

class test {
    public static void main(String[] args) {
        Scanner input =new Scanner(System.in);
        System.out.println("Enter the number of students:");
        int index = input.nextInt();
        int[] num = new int[index];
        int max = 0;
        
        System.out.println("Enter 4 scores:");
        
        for (int i = 0; i < index; i++) {
            num[i] = input.nextInt();
            if (num[i] > max){
            max = num[i];
            }
        }
        
        for (int i = 0; i <num.length ; i++) {
            if (num[i] >= max -10){
                System.out.println("Student " + i + " score " + num[i] + " grade is A");
            }else if (num[i] >= max - 20){
                System.out.println("Student " + i + " score " + num[i] + " grade is B");
            }else if (num[i] >= max - 30){
                System.out.println("Student " + i + " score " + num[i] + " grade is C");
            }else if (num[i] >= max - 40){
                System.out.println("Student " + i + " score " + num[i] + " grade is D");
            }else
                System.out.println("Student " + i + " score " + num[i] + " grade is F");
        }
    }

}

7.2
class test {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int[] a = new int[10];
        System.out.print("请输入10个整数:");
        for (int i = 0; i < a.length; i++) {
            a[i] = input.nextInt();
        }

        for (int i = a.length - 1; i >= 0 ; i--) {
            System.out.print(a[i] + " ");
        }

    }

}

7.3

import java.util.Scanner;

class test {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int[] a = new int[100];
        System.out.print("Enter the integers between 1 and 100:");
        
        int num = input.nextInt();
        while (num != 0){
            if (num <= 100 && num >=0)
                a[num - 1]++;
            num = input.nextInt();
        }

        for (int i = 0; i < a.length ; i++) {
            if (a[i] > 0){
                System.out.println((i+1) + " occurs " + a[i] + (a[i] > 1 ? " times" : " time"));
            }
        }

    }

}

7.4
import java.util.Scanner;

class test {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int[] a = new int[101];
        System.out.print("请输入分数:");

        int sum = 0;
        int count = 0;

        int num = input.nextInt();
        while (num >= 0){
            if (num <= 100 && num >=0) {
                a[num]++;
                sum = sum + num;
                count++;
            }
            num = input.nextInt();
        }

        int average = sum / count;
        int below = 0;
        int above = 0;
        for (int i = 0; i < a.length; i++) {
            if (i < average && a[i] >= 1){
                below++;
            }else if ( i >= average && a[i] >= 1){
                above++;
            }
        }
        System.out.println("平均分是:" + average + ",大于平均分的有"+ above +
                "个，低于平均分的有" + below + "个。");
    }
}

7.5
import java.util.Scanner;

class test {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int[] a = new int[10];
        int num = 0;//不重复的数字计时器（实际的不重复数组下标）

        System.out.print("Enter " + a.length + "numbers:");
        for (int i = 0; i < a.length ; i++) {
            int value = input.nextInt();//循环读取a.length数量的数字

            boolean in = false;//检查条件
            //同步检查数字是否在数组里面
            for (int j = 0; j < num; j++) {
                if (value == a[j]){
                    in = true;
                }
            }
            //添加进数组
            if (!in){
                a[num] = value;
                num++;
            }
        }

        System.out.println("the number of distinct number is " + num);
        System.out.print("the distinct number are:");
        for (int i = 0; i < num ; i++) {
            System.out.print(a[i] + " ");

        }
    }
}

7.6 略

7.7
class test {
    public static void main(String[] args) {
        //生成100个随机整数
        int[] num = new int[10];
        for (int i = 0; i < 100 ; i++) {
            int a = (int)(Math.random() * 10);
            num[a]++;
        }
        
        for (int i = 0; i < num.length ; i++) {
            System.out.println(i + " 出现了 " + num[i] + "次。");
        }
    }
}

7.8 略

7.9

import java.util.Scanner;

public class Test {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.println("Enter 10 numbers:");
        double[] num = new double[10];
        for (int i = 0; i < num.length ; i++) {
            double value = input.nextDouble();
        }
        System.out.println("The mininum number is " + min(num));
    }

    public static double min(double[] array) {
        double min = array[0];
        for (int i = 0; i < array.length ; i++) {
            if (array[i] < min){
                min = array[i];
            }
        }
        return min;
    }
}

7.10-7.14 略

7.15  使用7.5中的代码
7.16 ...
7.17
import java.util.Scanner;

public class Test {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.println("Enter the number of students:");
        int index = input.nextInt();
        int[] score = new int[index];
        String[] name = new String[index];

        for (int i = 0; i < index ; i++) {
            //读入名字
            System.out.println("Enter name:");
            String a = input.next();
            name[i] = a;
            //读入分数
            System.out.println("Enter score:");
            int b = input.nextInt();
            score[i] = b;
        }

        //排序
        for (int i = 0; i < score.length ; i++) {
            int min = i;
            for (int j = i + 1; j < score.length ; j++) {
                if (score[j] < score[i]){
                    min = j;
                }
            }

            if (min != i ){
                int temp = score[i];
                score[i] = score[min];
                score[min] = temp;

                String s_temp = name[i];
                name[i] = name[min];
                name[min] = s_temp;
            }
        }

        //打印
        for (int i = score.length - 1; i >= 0 ; i--) {
            System.out.println(name[i] + "," + score[i]);
        }
    }
}

7.18 冒泡算法

public class Test {

    public static void main(String[] args) {
        int[] a = {9, 2, 4, 62, 5, 12, 45, 13, 34};
        for (int j = a.length; j >= 0 ; j--) {

            for (int i = 0; i < a.length - 1; i++) {
                if (a[i] > a[i + 1]) {
                    int temp = a[i];
                    a[i] = a[i + 1];
                    a[i + 1] = temp;
                }
            }
        }
        for (int i = 0; i < a.length; i++) {
            System.out.print(a[i]+ " ");
        }
    }
}


7.19  加如for循环判断数组是否前面比后面小
  public static boolean isSorted(int[] list) {
    for (int i = 0; i < list.length - 1; i++) {
      if (list[i] > list[i + 1]) {
        return false;
      }
    }

    return true;
  }

7.20 看不懂题目  放上答案
public class Exercise07_21 {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
    System.out.print("Enter the number of balls to drop: ");
    int numberOfBalls = input.nextInt();
    
    System.out.print("Enter the number of slots: ");
    int numberOfSlots = input.nextInt();
    
    int[] slots = new int[numberOfSlots];
    
    for (int i = 0; i < numberOfBalls; i++) {
      slots[onePath(numberOfSlots)]++;
    }

    printHistogram(slots);
  }
  
  /** Return the slot position of the ball for a path and also print 
   * the path */
  public static int onePath(int numberOfSlots) {
    int position = 0;
    
    for (int i = 0; i < numberOfSlots - 1; i++)
      if (Math.random() < 0.5) {
        System.out.print("L");
      }
      else {
        System.out.print("R");
        position++;        
      }
    
    System.out.println();
    
    return position;
  }
  
  /** Print the histogram for the slots */
  public static void printHistogram(int[] slots) {
    int maxSlotHeight = max(slots);
    
    for (int h = maxSlotHeight; h > 0; h--) {
      for (int i = 0; i < slots.length; i++)
        if (slots[i] < h)
          System.out.print(" "); // Print nothing
        else
          System.out.print("O"); // Print a ball       
      
      System.out.println();
    }
  }
  
  /** Get the max element in slots */
  public static int max(int[] slots) {
    int result = slots[0];
    
    for (int i = 1; i < slots.length; i++) {
      if (result < slots[i])
        result = slots[i];
    }
    
    return result;
  }
}

7.22 略

